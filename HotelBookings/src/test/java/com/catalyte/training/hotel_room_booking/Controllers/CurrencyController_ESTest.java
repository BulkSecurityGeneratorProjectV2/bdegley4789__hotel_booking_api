/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 05 05:27:39 GMT 2018
 */

package com.catalyte.training.hotel_room_booking.Controllers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.catalyte.training.hotel_room_booking.Controllers.CurrencyController;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CurrencyController_ESTest extends CurrencyController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      Double double0 = new Double(1083.052967);
      Double double1 = new Double(0.0);
      // Undeclared exception!
      try { 
        currencyController0.updateCurrency("org.springframework.web.bind.annotation.RequestMethod", double0, "org.springframework.web.bind.annotation.RequestMethod", double1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // protocol doesn't support output
         //
         verifyException("com.catalyte.training.hotel_room_booking.Controllers.CurrencyController", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      Double double0 = new Double((-507.199967683239));
      // Undeclared exception!
      try { 
        currencyController0.updateCurrency((String) null, double0, "", double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // protocol doesn't support output
         //
         verifyException("com.catalyte.training.hotel_room_booking.Controllers.CurrencyController", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://localhost:8080/currency-exchange?currencyName=");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      String string0 = currencyController0.getCurrency("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://localhost:8080/currency-exchange?currencyName=5UKnE(u?(");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      CurrencyController currencyController0 = new CurrencyController();
      String string0 = currencyController0.deleteCurrency("5UKnE(u?(");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      // Undeclared exception!
      try { 
        currencyController0.deleteCurrency("^C{x,)1:.6 TS");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find: localhost
         //
         verifyException("com.catalyte.training.hotel_room_booking.Controllers.CurrencyController", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        currencyController0.createCurrency("c", double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // protocol doesn't support output
         //
         verifyException("com.catalyte.training.hotel_room_booking.Controllers.CurrencyController", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://localhost:8080/currency-exchange?currencyName=*@$D-J#e6gZ/y");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "*@$D-J#e6gZ/y");
      String string0 = currencyController0.deleteCurrency("*@$D-J#e6gZ/y");
      assertEquals("*@$D-J#e6gZ/y", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://localhost:8080/currency-exchange?currencyName=chQky,'vN[:");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "http://localhost:8080/currency-exchange");
      String string0 = currencyController0.getCurrency("chQky,'vN[:");
      assertEquals("http://localhost:8080/currency-exchange", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      // Undeclared exception!
      try { 
        currencyController0.getCurrency("chQky,'vN[:");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find: localhost
         //
         verifyException("com.catalyte.training.hotel_room_booking.Controllers.CurrencyController", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      CurrencyController currencyController0 = new CurrencyController();
      // Undeclared exception!
      try { 
        currencyController0.getCurrency((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find: localhost
         //
         verifyException("com.catalyte.training.hotel_room_booking.Controllers.CurrencyController", e);
      }
  }
}
